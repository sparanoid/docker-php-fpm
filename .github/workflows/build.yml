name: GitHub CI

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'

env:
  DOCKERHUB_SLUG: sparanoid/php-fpm
  GHCR_SLUG: ghcr.io/sparanoid/php-fpm

jobs:
  docker:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: [8-fpm, 7.4-fpm]

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate current image prefix
        id: prefix
        # Remove unwanted `-fpm` suffix from base image
        run: |
          prefix=$(echo ${{ matrix.php }} | sed 's/-fpm//g')
          echo $prefix
          echo "::set-output name=ref::$prefix"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.DOCKERHUB_SLUG }}
            ${{ env.GHCR_SLUG }}
          flavor: |
            prefix=${{ steps.prefix.outputs.ref }}-,onlatest=true
          # The ' ' is the tricky part to unset prefix parameter
          tags: |
            type=edge
            type=schedule
            type=ref,event=branch
            type=ref,event=branch,prefix=${{ startsWith(matrix.php, '8-fpm') && ' ' || format('{0}-', steps.prefix.outputs.ref) }}
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{version}},prefix=${{ startsWith(matrix.php, '8-fpm') && ' ' || format('{0}-', steps.prefix.outputs.ref) }}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix=${{ steps.prefix.outputs.ref }}-sha-

      - name: Build and push
        uses: docker/bake-action@v1
        env:
          BASE_TAG: ${{ matrix.php }}
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: build-all
          push: ${{ github.event_name != 'pull_request' }}
          set: |
            *.cache-from=type=registry,ref=${{ env.GHCR_SLUG }}:${{ steps.prefix.outputs.ref }}-buildcache
            *.cache-to=type=registry,ref=${{ env.GHCR_SLUG }}:${{ steps.prefix.outputs.ref }}-buildcache,mode=max

      - name: Check manifest
        if: github.event_name != 'pull_request'
        run: |
          docker buildx imagetools inspect ${{ env.DOCKERHUB_SLUG }}:${{ steps.meta.outputs.version }}
          docker buildx imagetools inspect ${{ env.GHCR_SLUG }}:${{ steps.meta.outputs.version }}

      - name: Inspect image
        if: github.event_name != 'pull_request'
        run: |
          docker pull ${{ env.DOCKERHUB_SLUG }}:${{ steps.meta.outputs.version }}
          docker image inspect ${{ env.DOCKERHUB_SLUG }}:${{ steps.meta.outputs.version }}
          docker pull ${{ env.GHCR_SLUG }}:${{ steps.meta.outputs.version }}
          docker image inspect ${{ env.GHCR_SLUG }}:${{ steps.meta.outputs.version }}
